//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31968024
// Cuda compilation tools, release 12.0, V12.0.76
// Based on NVVM 7.0.1
//

.version 8.0
.target sm_52
.address_size 64

	// .globl	convolution

.visible .entry convolution(
	.param .u64 convolution_param_0,
	.param .u32 convolution_param_1,
	.param .u32 convolution_param_2,
	.param .u64 convolution_param_3,
	.param .u32 convolution_param_4,
	.param .u32 convolution_param_5,
	.param .u32 convolution_param_6
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<97>;
	.reg .b32 	%r<40>;
	.reg .b64 	%rd<23>;


	ld.param.u64 	%rd13, [convolution_param_0];
	ld.param.u32 	%r14, [convolution_param_1];
	ld.param.u32 	%r18, [convolution_param_2];
	ld.param.u64 	%rd14, [convolution_param_3];
	ld.param.u32 	%r15, [convolution_param_4];
	ld.param.u32 	%r16, [convolution_param_5];
	ld.param.u32 	%r17, [convolution_param_6];
	cvta.to.global.u64 	%rd1, %rd14;
	cvta.to.global.u64 	%rd2, %rd13;
	mov.u32 	%r19, %ctaid.x;
	mov.u32 	%r20, %ntid.x;
	mov.u32 	%r21, %tid.x;
	mad.lo.s32 	%r1, %r20, %r19, %r21;
	mul.lo.s32 	%r22, %r18, %r14;
	setp.ge.s32 	%p1, %r1, %r22;
	@%p1 bra 	$L__BB0_12;

	setp.lt.s32 	%p2, %r16, 1;
	setp.lt.s32 	%p3, %r15, 1;
	mov.f32 	%f93, 0f00000000;
	or.pred  	%p4, %p2, %p3;
	mov.f32 	%f92, %f93;
	mov.f32 	%f91, %f93;
	@%p4 bra 	$L__BB0_11;

	add.s32 	%r2, %r15, -1;
	and.b32  	%r3, %r15, 3;
	sub.s32 	%r4, %r15, %r3;
	add.s64 	%rd3, %rd2, 32;
	add.s64 	%rd4, %rd1, 8;
	mov.u32 	%r23, 0;
	mov.u32 	%r36, %r23;

$L__BB0_3:
	mul.lo.s32 	%r6, %r36, %r15;
	mad.lo.s32 	%r7, %r36, %r14, %r1;
	setp.lt.u32 	%p5, %r2, 3;
	mov.u32 	%r39, %r23;
	@%p5 bra 	$L__BB0_6;

	mul.wide.s32 	%rd15, %r7, 16;
	add.s64 	%rd22, %rd3, %rd15;
	mul.wide.s32 	%rd16, %r6, 4;
	add.s64 	%rd21, %rd4, %rd16;
	mov.u32 	%r39, 0;
	mov.u32 	%r38, %r4;

$L__BB0_5:
	ld.global.u32 	%r26, [%rd21+-8];
	cvt.rn.f32.s32 	%f38, %r26;
	ld.global.f32 	%f39, [%rd22+-32];
	fma.rn.f32 	%f40, %f39, %f38, %f91;
	ld.global.f32 	%f41, [%rd22+-28];
	fma.rn.f32 	%f42, %f41, %f38, %f92;
	ld.global.f32 	%f43, [%rd22+-24];
	fma.rn.f32 	%f44, %f43, %f38, %f93;
	ld.global.u32 	%r27, [%rd21+-4];
	cvt.rn.f32.s32 	%f45, %r27;
	ld.global.f32 	%f46, [%rd22+-16];
	fma.rn.f32 	%f47, %f46, %f45, %f40;
	ld.global.f32 	%f48, [%rd22+-12];
	fma.rn.f32 	%f49, %f48, %f45, %f42;
	ld.global.f32 	%f50, [%rd22+-8];
	fma.rn.f32 	%f51, %f50, %f45, %f44;
	ld.global.u32 	%r28, [%rd21];
	cvt.rn.f32.s32 	%f52, %r28;
	ld.global.f32 	%f53, [%rd22];
	fma.rn.f32 	%f54, %f53, %f52, %f47;
	ld.global.f32 	%f55, [%rd22+4];
	fma.rn.f32 	%f56, %f55, %f52, %f49;
	ld.global.f32 	%f57, [%rd22+8];
	fma.rn.f32 	%f58, %f57, %f52, %f51;
	ld.global.u32 	%r29, [%rd21+4];
	cvt.rn.f32.s32 	%f59, %r29;
	ld.global.f32 	%f60, [%rd22+16];
	fma.rn.f32 	%f91, %f60, %f59, %f54;
	ld.global.f32 	%f61, [%rd22+20];
	fma.rn.f32 	%f92, %f61, %f59, %f56;
	ld.global.f32 	%f62, [%rd22+24];
	fma.rn.f32 	%f93, %f62, %f59, %f58;
	add.s32 	%r39, %r39, 4;
	add.s64 	%rd22, %rd22, 64;
	add.s64 	%rd21, %rd21, 16;
	add.s32 	%r38, %r38, -4;
	setp.ne.s32 	%p6, %r38, 0;
	@%p6 bra 	$L__BB0_5;

$L__BB0_6:
	setp.eq.s32 	%p7, %r3, 0;
	@%p7 bra 	$L__BB0_10;

	setp.eq.s32 	%p8, %r3, 1;
	add.s32 	%r30, %r39, %r6;
	mul.wide.s32 	%rd17, %r30, 4;
	add.s64 	%rd11, %rd1, %rd17;
	add.s32 	%r31, %r7, %r39;
	mul.wide.s32 	%rd18, %r31, 16;
	add.s64 	%rd12, %rd2, %rd18;
	ld.global.u32 	%r32, [%rd11];
	cvt.rn.f32.s32 	%f63, %r32;
	ld.global.f32 	%f64, [%rd12];
	fma.rn.f32 	%f91, %f64, %f63, %f91;
	ld.global.f32 	%f65, [%rd12+4];
	fma.rn.f32 	%f92, %f65, %f63, %f92;
	ld.global.f32 	%f66, [%rd12+8];
	fma.rn.f32 	%f93, %f66, %f63, %f93;
	@%p8 bra 	$L__BB0_10;

	setp.eq.s32 	%p9, %r3, 2;
	ld.global.u32 	%r33, [%rd11+4];
	cvt.rn.f32.s32 	%f67, %r33;
	ld.global.f32 	%f68, [%rd12+16];
	fma.rn.f32 	%f91, %f68, %f67, %f91;
	ld.global.f32 	%f69, [%rd12+20];
	fma.rn.f32 	%f92, %f69, %f67, %f92;
	ld.global.f32 	%f70, [%rd12+24];
	fma.rn.f32 	%f93, %f70, %f67, %f93;
	@%p9 bra 	$L__BB0_10;

	ld.global.u32 	%r34, [%rd11+8];
	cvt.rn.f32.s32 	%f71, %r34;
	ld.global.f32 	%f72, [%rd12+32];
	fma.rn.f32 	%f91, %f72, %f71, %f91;
	ld.global.f32 	%f73, [%rd12+36];
	fma.rn.f32 	%f92, %f73, %f71, %f92;
	ld.global.f32 	%f74, [%rd12+40];
	fma.rn.f32 	%f93, %f74, %f71, %f93;

$L__BB0_10:
	add.s32 	%r36, %r36, 1;
	setp.lt.s32 	%p10, %r36, %r16;
	@%p10 bra 	$L__BB0_3;

$L__BB0_11:
	cvt.rn.f32.s32 	%f75, %r17;
	div.rn.f32 	%f76, %f91, %f75;
	div.rn.f32 	%f77, %f92, %f75;
	div.rn.f32 	%f78, %f93, %f75;
	mul.wide.s32 	%rd19, %r1, 16;
	add.s64 	%rd20, %rd2, %rd19;
	st.global.f32 	[%rd20], %f76;
	st.global.f32 	[%rd20+4], %f77;
	st.global.f32 	[%rd20+8], %f78;
	mov.u32 	%r35, 0;
	st.global.u32 	[%rd20+12], %r35;

$L__BB0_12:
	ret;

}
	// .globl	diff
.visible .entry diff(
	.param .u64 diff_param_0,
	.param .u64 diff_param_1,
	.param .u32 diff_param_2,
	.param .u32 diff_param_3,
	.param .f32 diff_param_4,
	.param .u64 diff_param_5
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<38>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd3, [diff_param_0];
	ld.param.u64 	%rd4, [diff_param_1];
	ld.param.u32 	%r2, [diff_param_2];
	ld.param.u32 	%r3, [diff_param_3];
	ld.param.f32 	%f11, [diff_param_4];
	ld.param.u64 	%rd5, [diff_param_5];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r5, %r4, %r6;
	mul.lo.s32 	%r7, %r3, %r2;
	setp.ge.s32 	%p1, %r1, %r7;
	@%p1 bra 	$L__BB1_6;

	cvt.s64.s32 	%rd1, %r1;
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.s32 	%rd7, %r1, 16;
	add.s64 	%rd8, %rd6, %rd7;
	add.s64 	%rd2, %rd8, 12;
	ld.global.f32 	%f1, [%rd8+12];
	setp.eq.f32 	%p2, %f1, 0f3F800000;
	@%p2 bra 	$L__BB1_5;
	bra.uni 	$L__BB1_2;

$L__BB1_5:
	mov.u32 	%r8, 0;
	st.global.u32 	[%rd2+-12], %r8;
	st.global.u32 	[%rd2+-8], %r8;
	st.global.u32 	[%rd2+-4], %r8;
	st.global.u32 	[%rd2], %r8;
	bra.uni 	$L__BB1_6;

$L__BB1_2:
	cvta.to.global.u64 	%rd9, %rd4;
	shl.b64 	%rd10, %rd1, 4;
	add.s64 	%rd11, %rd9, %rd10;
	ld.global.f32 	%f16, [%rd11];
	ld.global.f32 	%f17, [%rd2+-12];
	sub.f32 	%f18, %f17, %f16;
	ld.global.f32 	%f19, [%rd11+4];
	ld.global.f32 	%f20, [%rd2+-8];
	sub.f32 	%f21, %f20, %f19;
	ld.global.f32 	%f22, [%rd11+8];
	ld.global.f32 	%f23, [%rd2+-4];
	sub.f32 	%f24, %f23, %f22;
	ld.global.f32 	%f25, [%rd11+12];
	sub.f32 	%f2, %f1, %f25;
	abs.f32 	%f3, %f18;
	abs.f32 	%f4, %f21;
	abs.f32 	%f5, %f24;
	mul.f32 	%f26, %f4, %f4;
	fma.rn.f32 	%f27, %f3, %f3, %f26;
	fma.rn.f32 	%f28, %f5, %f5, %f27;
	sqrt.rn.f32 	%f29, %f28;
	setp.lt.f32 	%p3, %f29, %f11;
	mov.f32 	%f34, 0f00000000;
	mov.f32 	%f35, %f34;
	mov.f32 	%f36, %f34;
	mov.f32 	%f37, %f34;
	@%p3 bra 	$L__BB1_4;

	abs.f32 	%f37, %f2;
	mov.f32 	%f34, %f3;
	mov.f32 	%f35, %f4;
	mov.f32 	%f36, %f5;

$L__BB1_4:
	st.global.f32 	[%rd2+-12], %f34;
	st.global.f32 	[%rd2+-8], %f35;
	st.global.f32 	[%rd2+-4], %f36;
	st.global.f32 	[%rd2], %f37;
	mul.f32 	%f30, %f35, %f35;
	fma.rn.f32 	%f31, %f34, %f34, %f30;
	fma.rn.f32 	%f32, %f36, %f36, %f31;
	sqrt.rn.f32 	%f33, %f32;
	cvta.to.global.u64 	%rd12, %rd5;
	shl.b64 	%rd13, %rd1, 2;
	add.s64 	%rd14, %rd12, %rd13;
	st.global.f32 	[%rd14], %f33;

$L__BB1_6:
	ret;

}
	// .globl	overlay
.visible .entry overlay(
	.param .u64 overlay_param_0,
	.param .u32 overlay_param_1,
	.param .u32 overlay_param_2,
	.param .f32 overlay_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<13>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [overlay_param_0];
	ld.param.u32 	%r2, [overlay_param_1];
	ld.param.u32 	%r3, [overlay_param_2];
	ld.param.f32 	%f1, [overlay_param_3];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r5, %r4, %r6;
	mul.lo.s32 	%r7, %r3, %r2;
	setp.ge.s32 	%p1, %r1, %r7;
	@%p1 bra 	$L__BB2_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 16;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f2, [%rd4];
	ld.global.f32 	%f3, [%rd4+4];
	mul.f32 	%f4, %f3, %f3;
	fma.rn.f32 	%f5, %f2, %f2, %f4;
	ld.global.f32 	%f6, [%rd4+8];
	fma.rn.f32 	%f7, %f6, %f6, %f5;
	sqrt.rn.f32 	%f8, %f7;
	sub.f32 	%f9, %f8, %f1;
	mov.f32 	%f10, 0f3F800000;
	sub.f32 	%f11, %f10, %f1;
	mov.u32 	%r8, 1065353216;
	div.rn.f32 	%f12, %f9, %f11;
	st.global.u32 	[%rd4], %r8;
	mov.u32 	%r9, 1063675494;
	st.global.u32 	[%rd4+4], %r9;
	mov.u32 	%r10, 1036831949;
	st.global.u32 	[%rd4+8], %r10;
	st.global.f32 	[%rd4+12], %f12;

$L__BB2_2:
	ret;

}

